"""
Django settings for superapp project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import json
import os

from os import environ
from pathlib import Path

import dj_database_url
from django.core.management.utils import get_random_secret_key
from django.utils.translation import gettext_lazy as _

from django_superapp.settings import extend_with_superapp_settings

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

ROOT_DIR = Path(__file__).resolve().parent.parent.parent

SECRET_KEY = environ.get("SECRET_KEY", get_random_secret_key())

DEBUG = environ.get("DEBUG", 'false') == 'true'

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

ALLOWED_HOSTS = environ.get("ALLOWED_HOSTS", "").split(",") + ['localhost', '127.0.0.1']
ALLOWED_HOSTS = [host for host in ALLOWED_HOSTS if host.strip()]
if DEBUG:
    ALLOWED_HOSTS = ['*']

CSRF_TRUSTED_ORIGINS = environ.get(
    "CSRF_TRUSTED_ORIGINS", ""
).split(",") + ['http://localhost:8000', 'http://localhost:3000']
CSRF_TRUSTED_ORIGINS = [host for host in CSRF_TRUSTED_ORIGINS if host.strip()]

######################################################################
# Apps
######################################################################
INSTALLED_APPS = [
    'django_superapp',
    "superapp.apps",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "whitenoise.runserver_nostatic",
    "django.contrib.staticfiles",
    "debug_toolbar",
    "import_export",
]

######################################################################
# Middleware
######################################################################
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

######################################################################
# Sessions
######################################################################
SESSION_ENGINE = "django.contrib.sessions.backends.signed_cookies"

ROOT_URLCONF = 'superapp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'superapp' / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'superapp.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
DATABASES = {
    "default": dj_database_url.config(default=os.environ.get('DATABASE_URL'))
}

######################################################################
# Caches
######################################################################
CACHES = {
    'default': {
        "BACKEND": "django.core.cache.backends.redis.RedisCache",
        "LOCATION": os.environ['REDIS_BROKER_URL'],
    }
} if os.environ.get('REDIS_BROKER_URL', '') != '' else {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'cache_table',
    }
}

######################################################################
# Localization
######################################################################
LANGUAGE_CODE = "en-us"

TIME_ZONE = "Europe/Berlin"

USE_I18N = True

USE_TZ = True

LANGUAGES = (
    ("en", _("English")),
)
LOCALE_PATHS = [os.path.join(BASE_DIR, 'locale')]

######################################################################
# Static
######################################################################
STATIC_URL = "/static/"

# STATICFILES_DIRS = [BASE_DIR / "superapp" / "static"]

STATIC_ROOT = BASE_DIR / "superapp" / "static"

MEDIA_ROOT = BASE_DIR / "media"

MEDIA_URL = "/media/"

############################################################################
# Debug toolbar
############################################################################
DEBUG_TOOLBAR_CONFIG = {"SHOW_TOOLBAR_CALLBACK": lambda request: DEBUG}

######################################################################
# X_FRAME
######################################################################
X_FRAME_OPTIONS = "SAMEORIGIN"

######################################################################
# SUPERAPP dynamic settings
######################################################################
from . import apps as superapp_apps
extend_with_superapp_settings(
    main_settings=globals(),
    superapp_apps=superapp_apps
)
print(json.dumps(INSTALLED_APPS))